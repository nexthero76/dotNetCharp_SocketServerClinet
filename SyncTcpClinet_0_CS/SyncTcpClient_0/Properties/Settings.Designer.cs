//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.34014
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------




//INSTANT C# NOTE: Formerly VB project-level imports:
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Drawing;
using System.Diagnostics;
using System.Windows.Forms;

namespace SyncTcpClient_0
{
	namespace Properties
	{

		[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0"), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		internal sealed partial class Settings : System.Configuration.ApplicationSettingsBase
		{
			private static Settings defaultInstance = (Settings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings());

#region My.Settings 自動儲存功能
//INSTANT C# TODO TASK: C# compiler constants cannot be set to explicit values:
//#if _MyType == "WindowsForms"
		private static bool addedHandler;

		private static object addedHandlerLockObject = new object();

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		private static void AutoSaveSettings(object sender, global::System.EventArgs e)
		{
			if (My.MyApplication.Application.SaveMySettingsOnExit)
			{
				defaultInstance.Save();
			}
		}
//#endif
#endregion

			public static Settings Default
			{
				get
				{

//INSTANT C# TODO TASK: C# compiler constants cannot be set to explicit values:
//#if _MyType == "WindowsForms"
				   if (!addedHandler)
				   {
						lock (addedHandlerLockObject)
						{
							if (!addedHandler)
							{
								My.MyApplication.Application.Shutdown += new Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler(AutoSaveSettings);
								addedHandler = true;
							}
						}
					}
//#endif
					return defaultInstance;
				}
			}
		}
	}

//INSTANT C# NOTE: This block was only required to support 'My.Settings' in VB. 'Properties.Settings' is used in C#:
//Namespace My
//
//	<Microsoft.VisualBasic.HideModuleNameAttribute(), global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()> Friend Module MySettingsProperty
//
//		<global::System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")> Friend ReadOnly Property Settings() As SyncTcpClient_0.My.MySettings
//			Get
//				return SyncTcpClient_0.My.MySettings.Default
//			End Get
//		End Property
//	End Module
//End Namespace

}